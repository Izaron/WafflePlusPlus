#include "nice_printer.h"

namespace Waffle {

NicePrinter::NicePrinter(IFilePrinter& printer)
    : proxyPrinter_{&printer}
{}

void NicePrinter::AddPreabmle(std::string_view source) {
    *this << "// Generated by the Waffle++ code generator. DO NOT EDIT!\n";
    *this << "// source: " << source << "\n\n";
}

void NicePrinter::Include(std::string_view file) {
    *this << "#include <" << file << ">\n";
}

void NicePrinter::NewLine(int count) {
    for (int i = 0; i < count; ++i) {
        *this << "\n";
    }
}

void NicePrinter::OpenNamespace() {
    *this << "namespace Waffle {\n\n";
}

void NicePrinter::CloseNamespace() {
    *this << "} // namespace Waffle\n";
}

void NicePrinter::Throw(std::string_view what) {
    *this << "throw std::runtime_error(" << what << ");\n";
}

void NicePrinter::ThrowString(std::string_view what) {
    Throw("\"" + std::string{what} + "\"");
}

void NicePrinter::Unreachable() {
    *this << "__builtin_unreachable();\n";
}

void NicePrinter::AddIndent(int diff) {
    indent_ += 4;
}

void NicePrinter::DecreaseIndent(int diff) {
    indent_ -= 4;
}

NicePrinter& NicePrinter::operator<<(std::string_view s) {
    if (addIndent_) {
        if (s != "\n") {
            for (int i = 0; i < indent_; ++i) {
                (*proxyPrinter_) << " ";
            }
        }
        addIndent_ = false;
    }
    (*proxyPrinter_) << s;
    if (s.ends_with("\n")) {
        addIndent_ = true;
    }
    return *this;
}

} // namespace Waffle
