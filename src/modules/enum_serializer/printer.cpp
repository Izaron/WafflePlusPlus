#include "printer.h"

#include <lib/string_util/string_util.h>

namespace Waffle::EnumSerializer {

namespace {

constexpr std::string_view INSERT_BEFORE_EXT = "enum_serializer";

class EnumDataPrinter {
public:
    explicit EnumDataPrinter(Context& ctx, const EnumDatas& datas)
        : Ctx_{ctx}
        , Datas_{datas}
    {}

    void Print() {
        const std::string_view inFile = StringUtil::AfterLastSlash(Ctx_.InFile);
        auto& printer = Ctx_.FileManager.GetOrCreateFilePrinter(StringUtil::InsertBeforeExt(inFile, INSERT_BEFORE_EXT));

        printer << "// Generated by the Waffle++ code generator. DO NOT EDIT!\n";
        printer << "// source: " << inFile << "\n";
        printer << "int kek = 1337;\n";
        for (const auto& data : Datas_) {
            printer << "// values for " << StringUtil::QualifiedName(*data.Decl) << "\n";
            for (const auto& [constantDecl, stringValues] : data.Constants) {
                for (const auto& stringValue : stringValues) {
                    printer << "// " << StringUtil::QualifiedName(*constantDecl) << " <---> " << stringValue << "\n";
                }
            }
        }
    }

private:
    Context& Ctx_;
    const EnumDatas& Datas_;
};

} // namespace

void PrintEnumDatas(Context& ctx, const EnumDatas& enumDatas) {
    EnumDataPrinter printer{ctx, enumDatas};
    printer.Print();
}

} // namespace Waffle::EnumSerializer
