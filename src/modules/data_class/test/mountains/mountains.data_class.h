// Generated by the Waffle++ code generator. DO NOT EDIT!
// source: mountains.h

#include "mountains.h"

namespace Waffle {

// @brief generated from model::LatLonStub
class LatLon {
public:
    explicit LatLon(
        double latitude,
        double longitude
    )
        : latitude_(latitude)
        , longitude_(longitude)
    {}

    void SetLatitude(double latitude) {
        latitude_ = latitude;
    }
    double GetLatitude() const {
        return latitude_;
    }

    void SetLongitude(double longitude) {
        longitude_ = longitude;
    }
    double GetLongitude() const {
        return longitude_;
    }

private:
    double latitude_;
    double longitude_;
};

// @brief generated from model::MountainStub
class Mountain {
public:
    explicit Mountain(
        std::optional<std::string>&& name,
        std::string&& country,
        LatLon&& position,
        double peak
    )
        : name_(std::move(name))
        , country_(std::move(country))
        , position_(std::move(position))
        , peak_(peak)
    {}

    void SetName(std::optional<std::string>&& name) {
        name_ = std::move(name);
    }
    void SetName(const std::optional<std::string>& name) {
        name_ = name;
    }
    const std::optional<std::string>& GetName() const {
        return name_;
    }

    const std::string& GetCountry() const {
        return country_;
    }

    void SetPosition(LatLon&& position) {
        position_ = std::move(position);
    }
    void SetPosition(const LatLon& position) {
        position_ = position;
    }
    const LatLon& GetPosition() const {
        return position_;
    }

    void SetPeak(double peak) {
        peak_ = peak;
    }
    double GetPeak() const {
        return peak_;
    }

private:
    std::optional<std::string> name_;
    std::string country_;
    LatLon position_;
    double peak_;
};

} // namespace Waffle
